spring:
  datasource:
    username: root
    password: 123456
    url: jdbc:mysql://127.0.0.1:3306/mall_wms
    driver-class-name: com.mysql.cj.jdbc.Driver
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
      config:
        import-check:
          enabled: false
        server-addr: 127.0.0.1:8848
    # =========================== sentinel spring.cloud ===================================
    sentinel:
      transport:
        dashboard: 127.0.0.1:8333 # 控制台地址
        port: 8719 # 传输端口 （8719默认的）
  # 如果没有名字，nacos里看不到
  application:
    name: mall-ware
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8 # 这个不加，返回的数据有时差

#===================== rabbitmq ============================================
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    virtual-host: /
    publisher-confirm-type: correlated
    publisher-returns: true # 发送端消息抵达队列的确认
    template:
      mandatory: true # 只要抵达队列，已异步发送优先回调我们的这个 returnConfirm
    listener:
      simple:
        acknowledge-mode: manual # 消息的收到 改为手动模式
  #    publisher-confirm-type: none # 开销低，性能较好，适用于不需要精确确认的场景。
  #    publisher-confirms: true 新版本中废弃

#===================== mybatis-plus ============================================
mybatis-plus:
  # 配置mapper的位置 , 默认值也是这个
  mapper-locations: classpath*:/mapper/**/*.xml
  # 配置ID自增
  global-config:
    db-config:
      id-type: auto

server:
  port: 5500


logging:
  level:
    com.vurtnewk.mall: debug

# ==================== seata ===========================================
#seata:
#  enabled: true
#  application-id: ${spring.application.name} # 应用 ID，通常与 Spring Boot 应用名称一致
#  tx-service-group: mall-ware_tx_group #  Seata 客户端的事务组名称，用于标识当前应用的事务组
#
#  service:
#    vgroup-mapping:
#      mall-ware_tx_group: default #用于将事务组（tx-service-group）映射到 Seata Server 的集群名称。
#    grouplist:
#      default: 127.0.0.1:8091         # Seata Server 地址
#  registry:
#    type: nacos
#    nacos:
#      server-addr: 127.0.0.1:8848
#      application: seata-server
#      context-path: /nacos
#      cluster: default
#  data-source-proxy-mode: AT
#  enable-auto-data-source-proxy: false

management:
  #============================ zipkin ====================================
  tracing:
    sampling:
      probability: 1
  zipkin:
    tracing:
      endpoint: http://127.0.0.1:9411/api/v2/spans
  #============================ sentinel的统计信息配置 暴露endpoints ====================================
  endpoints:
    web:
      exposure:
        include: "*"
#============================ 开启 feign 的 sentinel 功能 ====================================
feign:
  sentinel:
    enabled: true