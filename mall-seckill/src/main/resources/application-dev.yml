spring:
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
      config:
        server-addr: 127.0.0.1:8848
        import-check:
          enabled: false
    # =========================== sentinel spring.cloud ===================================
    sentinel:
      transport:
        dashboard: 127.0.0.1:8333 # 控制台地址
        port: 8719 # 传输端口 （8719默认的）
    # =========================== redis ===================================
  data:
    redis:
     host: 127.0.0.1
     port: 6379
  #===================== thymeleaf ============================================
  thymeleaf:
    cache: false # 关闭缓存，查看实时效果
  #===================== rabbitmq ============================================
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    virtual-host: /
#    publisher-confirm-type: correlated
#    publisher-returns: true # 发送端消息抵达队列的确认
#    template:
#      mandatory: true # 只要抵达队列，已异步发送优先回调我们的这个 returnConfirm
#    listener:
#      simple:
#        acknowledge-mode: manual # 消息的收到 改为手动模式
  #    publisher-confirm-type: none # 开销低，性能较好，适用于不需要精确确认的场景。
  #    publisher-confirms: true 新版本中废弃

  # =========================== 名字 ===================================
  application:
    name: mall-seckill
# =========================== 线程池的属性 ===================================
  task:
    execution:
      pool:
        core-size: 20
        max-size: 50
# =========================== 定时任务的线程 ===================================
#  task:
#    scheduling:
#      pool:
#        size: 5

#============================ 端口 ====================================
server:
  port: 6000 # chrome使用6000端口会报错 net::ERR_UNSAFE_PORT
#============================ 日志 ====================================
logging:
  level:
    com.vurtnewk.mall: debug
    org.springframework.cloud.openfeign: debug #开启openfeign的debug日志

management:
  #============================ zipkin ====================================
  tracing:
    sampling:
      probability: 1
  zipkin:
    tracing:
      endpoint: http://127.0.0.1:9411/api/v2/spans
  #============================ sentinel的统计信息配置 暴露endpoints ====================================
  endpoints:
    web:
      exposure:
        include: "*"
#============================ 开启 feign 的 sentinel 功能 ====================================
feign:
  sentinel:
    enabled: true